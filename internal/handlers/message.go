package handlers

import (
	"fmt"
	"strings"

	"github.com/digkill/consultantCyberCTO/internal/components/db"
	"github.com/digkill/consultantCyberCTO/internal/components/gpt"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func formatLoanInfo(record *db.LoanRecord) string {
	confirm := "–Ω–µ —É–∫–∞–∑–∞–Ω–∞"
	created := "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"

	if record.ConfirmDate.Valid {
		confirm = record.ConfirmDate.Time.Format("2006-01-02 15:04:05")
	}
	if record.CreatedAt.Valid {
		created = record.CreatedAt.Time.Format("2006-01-02 15:04:05")
	}

	return fmt.Sprintf(`‚úÖ –ß–µ–∫ –Ω–∞–π–¥–µ–Ω:

üë§ –ö–ª–∏–µ–Ω—Ç: %s %s %s
üìû –¢–µ–ª–µ—Ñ–æ–Ω: %s
üìß Email: %s
üí∞ –°—É–º–º–∞: %.2f ‚ÇΩ
üì¶ –°—Ç–∞—Ç—É—Å: %d
üßæ –°—Å—ã–ª–∫–∞ –Ω–∞ —á–µ–∫: %s
üïí –î–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: %s
üóìÔ∏è –°–æ–∑–¥–∞–Ω–æ: %s`,
		record.LastName, record.FirstName, record.MiddleName,
		record.ClientPhone, record.ClientEmail,
		record.Amount, record.Status,
		record.ReceiptLink, confirm, created,
	)
}

func HandleMessage(bot *tgbotapi.BotAPI, msg *tgbotapi.Message) {
	parsedClients := gpt.ExtractClientsFromAnyMessage(msg.Text)

	if len(parsedClients) == 0 {
		bot.Send(tgbotapi.NewMessage(msg.Chat.ID, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –Ω–∏ –æ–¥–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ö–æ—Ç—è –±—ã –§–ò–û, —Ç–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ email."))
		return
	}

	for _, client := range parsedClients {
		queryText := strings.Join([]string{
			client.FirstName,
			client.LastName,
			client.MiddleName,
			client.Phone,
			client.Email,
		}, " ")

		records := db.FindClientsFromMessage(queryText)

		if len(records) == 0 {
			reply := fmt.Sprintf("‚ùå –ß–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –∫–ª–∏–µ–Ω—Ç—É %s %s %s", client.LastName, client.FirstName, client.MiddleName)
			bot.Send(tgbotapi.NewMessage(msg.Chat.ID, reply))
			continue
		}

		for _, record := range records {
			reply := formatLoanInfo(record)
			bot.Send(tgbotapi.NewMessage(msg.Chat.ID, reply))
		}
	}
}
